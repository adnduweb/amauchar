/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/backend/core/js/custom/apps/ecommerce/catalog/save-product.js":
/*!*********************************************************************************!*\
  !*** ./resources/backend/core/js/custom/apps/ecommerce/catalog/save-product.js ***!
  \*********************************************************************************/
/***/ (() => {

eval(" // Class definition\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar KTAppEcommerceSaveProduct = function () {\n  // Private functions\n  // Init quill editor\n  var initQuill = function initQuill() {\n    // Define all elements for quill editor\n    var elements = ['#kt_ecommerce_add_product_description', '#kt_ecommerce_add_product_meta_description']; // Loop all elements\n\n    elements.forEach(function (element) {\n      // Get quill element\n      var quill = document.querySelector(element); // Break if element not found\n\n      if (!quill) {\n        return;\n      } // Init quill --- more info: https://quilljs.com/docs/quickstart/\n\n\n      quill = new Quill(element, {\n        modules: {\n          toolbar: [[{\n            header: [1, 2, false]\n          }], ['bold', 'italic', 'underline'], ['image', 'code-block']]\n        },\n        placeholder: 'Type your text here...',\n        theme: 'snow' // or 'bubble'\n\n      });\n    });\n  }; // Init tagify\n\n\n  var initTagify = function initTagify() {\n    // Define all elements for tagify\n    var elements = ['#kt_ecommerce_add_product_category', '#kt_ecommerce_add_product_tags']; // Loop all elements\n\n    elements.forEach(function (element) {\n      // Get tagify element\n      var tagify = document.querySelector(element); // Break if element not found\n\n      if (!tagify) {\n        return;\n      } // Init tagify --- more info: https://yaireo.github.io/tagify/\n\n\n      new Tagify(tagify, {\n        whitelist: [\"new\", \"trending\", \"sale\", \"discounted\", \"selling fast\", \"last 10\"],\n        dropdown: {\n          maxItems: 20,\n          // <- mixumum allowed rendered suggestions\n          classname: \"tagify__inline__suggestions\",\n          // <- custom classname for this dropdown, so it could be targeted\n          enabled: 0,\n          // <- show suggestions on focus\n          closeOnSelect: false // <- do not hide the suggestions dropdown once an item has been selected\n\n        }\n      });\n    });\n  }; // Init form repeater --- more info: https://github.com/DubFriend/jquery.repeater\n\n\n  var initFormRepeater = function initFormRepeater() {\n    $('#kt_ecommerce_add_product_options').repeater({\n      initEmpty: false,\n      defaultValues: {\n        'text-input': 'foo'\n      },\n      show: function show() {\n        $(this).slideDown(); // Init select2 on new repeated items\n\n        initConditionsSelect2();\n      },\n      hide: function hide(deleteElement) {\n        $(this).slideUp(deleteElement);\n      }\n    });\n  }; // Init condition select2\n\n\n  var initConditionsSelect2 = function initConditionsSelect2() {\n    // Tnit new repeating condition types\n    var allConditionTypes = document.querySelectorAll('[data-kt-ecommerce-catalog-add-product=\"product_option\"]');\n    allConditionTypes.forEach(function (type) {\n      if ($(type).hasClass(\"select2-hidden-accessible\")) {\n        return;\n      } else {\n        $(type).select2({\n          minimumResultsForSearch: -1\n        });\n      }\n    });\n  }; // Init noUIslider\n\n\n  var initSlider = function initSlider() {\n    var slider = document.querySelector(\"#kt_ecommerce_add_product_discount_slider\");\n    var value = document.querySelector(\"#kt_ecommerce_add_product_discount_label\");\n    noUiSlider.create(slider, {\n      start: [10],\n      connect: true,\n      range: {\n        \"min\": 1,\n        \"max\": 100\n      }\n    });\n    slider.noUiSlider.on(\"update\", function (values, handle) {\n      value.innerHTML = Math.round(values[handle]);\n\n      if (handle) {\n        value.innerHTML = Math.round(values[handle]);\n      }\n    });\n  }; // Init DropzoneJS --- more info:\n\n\n  var initDropzone = function initDropzone() {\n    var myDropzone = new Dropzone(\"#kt_ecommerce_add_product_media\", {\n      url: \"https://keenthemes.com/scripts/void.php\",\n      // Set the url for your upload script location\n      paramName: \"file\",\n      // The name that will be used to transfer the file\n      maxFiles: 10,\n      maxFilesize: 10,\n      // MB\n      addRemoveLinks: true,\n      accept: function accept(file, done) {\n        if (file.name == \"wow.jpg\") {\n          done(\"Naha, you don't.\");\n        } else {\n          done();\n        }\n      }\n    });\n  }; // Handle discount options\n\n\n  var handleDiscount = function handleDiscount() {\n    var discountOptions = document.querySelectorAll('input[name=\"discount_option\"]');\n    var percentageEl = document.getElementById('kt_ecommerce_add_product_discount_percentage');\n    var fixedEl = document.getElementById('kt_ecommerce_add_product_discount_fixed');\n    discountOptions.forEach(function (option) {\n      option.addEventListener('change', function (e) {\n        var value = e.target.value;\n\n        switch (value) {\n          case '2':\n            {\n              percentageEl.classList.remove('d-none');\n              fixedEl.classList.add('d-none');\n              break;\n            }\n\n          case '3':\n            {\n              percentageEl.classList.add('d-none');\n              fixedEl.classList.remove('d-none');\n              break;\n            }\n\n          default:\n            {\n              percentageEl.classList.add('d-none');\n              fixedEl.classList.add('d-none');\n              break;\n            }\n        }\n      });\n    });\n  }; // Shipping option handler\n\n\n  var handleShipping = function handleShipping() {\n    var shippingOption = document.getElementById('kt_ecommerce_add_product_shipping_checkbox');\n    var shippingForm = document.getElementById('kt_ecommerce_add_product_shipping');\n    shippingOption.addEventListener('change', function (e) {\n      var value = e.target.checked;\n\n      if (value) {\n        shippingForm.classList.remove('d-none');\n      } else {\n        shippingForm.classList.add('d-none');\n      }\n    });\n  }; // Category status handler\n\n\n  var handleStatus = function handleStatus() {\n    var target = document.getElementById('kt_ecommerce_add_product_status');\n    var select = document.getElementById('kt_ecommerce_add_product_status_select');\n    var statusClasses = ['bg-success', 'bg-warning', 'bg-danger'];\n    $(select).on('change', function (e) {\n      var value = e.target.value;\n\n      switch (value) {\n        case \"published\":\n          {\n            var _target$classList;\n\n            (_target$classList = target.classList).remove.apply(_target$classList, statusClasses);\n\n            target.classList.add('bg-success');\n            hideDatepicker();\n            break;\n          }\n\n        case \"scheduled\":\n          {\n            var _target$classList2;\n\n            (_target$classList2 = target.classList).remove.apply(_target$classList2, statusClasses);\n\n            target.classList.add('bg-warning');\n            showDatepicker();\n            break;\n          }\n\n        case \"inactive\":\n          {\n            var _target$classList3;\n\n            (_target$classList3 = target.classList).remove.apply(_target$classList3, statusClasses);\n\n            target.classList.add('bg-danger');\n            hideDatepicker();\n            break;\n          }\n\n        case \"draft\":\n          {\n            var _target$classList4;\n\n            (_target$classList4 = target.classList).remove.apply(_target$classList4, statusClasses);\n\n            target.classList.add('bg-primary');\n            hideDatepicker();\n            break;\n          }\n\n        default:\n          break;\n      }\n    }); // Handle datepicker\n\n    var datepicker = document.getElementById('kt_ecommerce_add_product_status_datepicker'); // Init flatpickr --- more info: https://flatpickr.js.org/\n\n    $('#kt_ecommerce_add_product_status_datepicker').flatpickr({\n      enableTime: true,\n      dateFormat: \"Y-m-d H:i\"\n    });\n\n    var showDatepicker = function showDatepicker() {\n      datepicker.parentNode.classList.remove('d-none');\n    };\n\n    var hideDatepicker = function hideDatepicker() {\n      datepicker.parentNode.classList.add('d-none');\n    };\n  }; // Condition type handler\n\n\n  var handleConditions = function handleConditions() {\n    var allConditions = document.querySelectorAll('[name=\"method\"][type=\"radio\"]');\n    var conditionMatch = document.querySelector('[data-kt-ecommerce-catalog-add-category=\"auto-options\"]');\n    allConditions.forEach(function (radio) {\n      radio.addEventListener('change', function (e) {\n        if (e.target.value === '1') {\n          conditionMatch.classList.remove('d-none');\n        } else {\n          conditionMatch.classList.add('d-none');\n        }\n      });\n    });\n  }; // Submit form handler\n\n\n  var handleSubmit = function handleSubmit() {\n    var _fields;\n\n    // Define variables\n    var validator; // Get elements\n\n    var form = document.getElementById('kt_ecommerce_add_product_form');\n    var submitButton = document.getElementById('kt_ecommerce_add_product_submit'); // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\n    validator = FormValidation.formValidation(form, {\n      fields: (_fields = {\n        'product_name': {\n          validators: {\n            notEmpty: {\n              message: 'Product name is required'\n            }\n          }\n        },\n        'sku': {\n          validators: {\n            notEmpty: {\n              message: 'SKU is required'\n            }\n          }\n        }\n      }, _defineProperty(_fields, \"sku\", {\n        validators: {\n          notEmpty: {\n            message: 'Product barcode is required'\n          }\n        }\n      }), _defineProperty(_fields, 'shelf', {\n        validators: {\n          notEmpty: {\n            message: 'Shelf quantity is required'\n          }\n        }\n      }), _defineProperty(_fields, 'price', {\n        validators: {\n          notEmpty: {\n            message: 'Product base price is required'\n          }\n        }\n      }), _defineProperty(_fields, 'tax', {\n        validators: {\n          notEmpty: {\n            message: 'Product tax class is required'\n          }\n        }\n      }), _fields),\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    }); // Handle submit button\n\n    submitButton.addEventListener('click', function (e) {\n      e.preventDefault(); // Validate form before submit\n\n      if (validator) {\n        validator.validate().then(function (status) {\n          console.log('validated!');\n\n          if (status == 'Valid') {\n            submitButton.setAttribute('data-kt-indicator', 'on'); // Disable submit button whilst loading\n\n            submitButton.disabled = true;\n            setTimeout(function () {\n              submitButton.removeAttribute('data-kt-indicator');\n              Swal.fire({\n                text: \"Form has been successfully submitted!\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                  confirmButton: \"btn btn-primary\"\n                }\n              }).then(function (result) {\n                if (result.isConfirmed) {\n                  // Enable submit button after loading\n                  submitButton.disabled = false; // Redirect to customers list page\n\n                  window.location = form.getAttribute(\"data-kt-redirect\");\n                }\n              });\n            }, 2000);\n          } else {\n            Swal.fire({\n              html: \"Sorry, looks like there are some errors detected, please try again. <br/><br/>Please note that there may be errors in the <strong>General</strong> or <strong>Advanced</strong> tabs\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn btn-primary\"\n              }\n            });\n          }\n        });\n      }\n    });\n  }; // Public methods\n\n\n  return {\n    init: function init() {\n      // Init forms\n      initQuill();\n      initTagify();\n      initSlider();\n      initFormRepeater();\n      initDropzone();\n      initConditionsSelect2(); // Handle forms\n\n      handleStatus();\n      handleConditions();\n      handleDiscount();\n      handleShipping();\n      handleSubmit();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTAppEcommerceSaveProduct.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYmFja2VuZC9jb3JlL2pzL2N1c3RvbS9hcHBzL2Vjb21tZXJjZS9jYXRhbG9nL3NhdmUtcHJvZHVjdC5qcy5qcyIsIm1hcHBpbmdzIjoiQ0FFQTs7OztBQUNBLElBQUlBLHlCQUF5QixHQUFHLFlBQVk7QUFFeEM7QUFFQTtBQUNBLE1BQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZLEdBQU07QUFDcEI7QUFDQSxRQUFNQyxRQUFRLEdBQUcsQ0FDYix1Q0FEYSxFQUViLDRDQUZhLENBQWpCLENBRm9CLENBT3BCOztBQUNBQSxJQUFBQSxRQUFRLENBQUNDLE9BQVQsQ0FBaUIsVUFBQUMsT0FBTyxFQUFJO0FBQ3hCO0FBQ0EsVUFBSUMsS0FBSyxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUJILE9BQXZCLENBQVosQ0FGd0IsQ0FJeEI7O0FBQ0EsVUFBSSxDQUFDQyxLQUFMLEVBQVk7QUFDUjtBQUNILE9BUHVCLENBU3hCOzs7QUFDQUEsTUFBQUEsS0FBSyxHQUFHLElBQUlHLEtBQUosQ0FBVUosT0FBVixFQUFtQjtBQUN2QkssUUFBQUEsT0FBTyxFQUFFO0FBQ0xDLFVBQUFBLE9BQU8sRUFBRSxDQUNMLENBQUM7QUFDR0MsWUFBQUEsTUFBTSxFQUFFLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxLQUFQO0FBRFgsV0FBRCxDQURLLEVBSUwsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixXQUFuQixDQUpLLEVBS0wsQ0FBQyxPQUFELEVBQVUsWUFBVixDQUxLO0FBREosU0FEYztBQVV2QkMsUUFBQUEsV0FBVyxFQUFFLHdCQVZVO0FBV3ZCQyxRQUFBQSxLQUFLLEVBQUUsTUFYZ0IsQ0FXVDs7QUFYUyxPQUFuQixDQUFSO0FBYUgsS0F2QkQ7QUF3QkgsR0FoQ0QsQ0FMd0MsQ0F1Q3hDOzs7QUFDQSxNQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBYSxHQUFNO0FBQ3JCO0FBQ0EsUUFBTVosUUFBUSxHQUFHLENBQ2Isb0NBRGEsRUFFYixnQ0FGYSxDQUFq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YSxFQUFFO0FBRE47QUFMUCxhQUFWO0FBU0g7QUFDSixTQXpDRDtBQTBDSDtBQUNKLEtBaEREO0FBaURILEdBckhELENBN1F3QyxDQW9ZeEM7OztBQUNBLFNBQU87QUFDSE8sSUFBQUEsSUFBSSxFQUFFLGdCQUFZO0FBQ2Q7QUFDQXpJLE1BQUFBLFNBQVM7QUFDVGEsTUFBQUEsVUFBVTtBQUNWMEIsTUFBQUEsVUFBVTtBQUNWakIsTUFBQUEsZ0JBQWdCO0FBQ2hCK0IsTUFBQUEsWUFBWTtBQUNaeEIsTUFBQUEscUJBQXFCLEdBUFAsQ0FTZDs7QUFDQW9ELE1BQUFBLFlBQVk7QUFDWlUsTUFBQUEsZ0JBQWdCO0FBQ2hCMUIsTUFBQUEsY0FBYztBQUNkWSxNQUFBQSxjQUFjO0FBQ2RrQixNQUFBQSxZQUFZO0FBQ2Y7QUFoQkUsR0FBUDtBQWtCSCxDQXZaK0IsRUFBaEMsQyxDQXlaQTs7O0FBQ0EyQyxNQUFNLENBQUNDLGtCQUFQLENBQTBCLFlBQVk7QUFDbEM1SSxFQUFBQSx5QkFBeUIsQ0FBQzBJLElBQTFCO0FBQ0gsQ0FGRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9iYWNrZW5kL2NvcmUvanMvY3VzdG9tL2FwcHMvZWNvbW1lcmNlL2NhdGFsb2cvc2F2ZS1wcm9kdWN0LmpzP2ZkZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVEFwcEVjb21tZXJjZVNhdmVQcm9kdWN0ID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIC8vIFByaXZhdGUgZnVuY3Rpb25zXHJcblxyXG4gICAgLy8gSW5pdCBxdWlsbCBlZGl0b3JcclxuICAgIGNvbnN0IGluaXRRdWlsbCA9ICgpID0+IHtcclxuICAgICAgICAvLyBEZWZpbmUgYWxsIGVsZW1lbnRzIGZvciBxdWlsbCBlZGl0b3JcclxuICAgICAgICBjb25zdCBlbGVtZW50cyA9IFtcclxuICAgICAgICAgICAgJyNrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3RfZGVzY3JpcHRpb24nLFxyXG4gICAgICAgICAgICAnI2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9tZXRhX2Rlc2NyaXB0aW9uJ1xyXG4gICAgICAgIF07XHJcblxyXG4gICAgICAgIC8vIExvb3AgYWxsIGVsZW1lbnRzXHJcbiAgICAgICAgZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgLy8gR2V0IHF1aWxsIGVsZW1lbnRcclxuICAgICAgICAgICAgbGV0IHF1aWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbGVtZW50KTtcclxuXHJcbiAgICAgICAgICAgIC8vIEJyZWFrIGlmIGVsZW1lbnQgbm90IGZvdW5kXHJcbiAgICAgICAgICAgIGlmICghcXVpbGwpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gSW5pdCBxdWlsbCAtLS0gbW9yZSBpbmZvOiBodHRwczovL3F1aWxsanMuY29tL2RvY3MvcXVpY2tzdGFydC9cclxuICAgICAgICAgICAgcXVpbGwgPSBuZXcgUXVpbGwoZWxlbWVudCwge1xyXG4gICAgICAgICAgICAgICAgbW9kdWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRvb2xiYXI6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgW3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcjogWzEsIDIsIGZhbHNlXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgWydib2xkJywgJ2l0YWxpYycsICd1bmRlcmxpbmUnXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgWydpbWFnZScsICdjb2RlLWJsb2NrJ11cclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICdUeXBlIHlvdXIgdGV4dCBoZXJlLi4uJyxcclxuICAgICAgICAgICAgICAgIHRoZW1lOiAnc25vdycgLy8gb3IgJ2J1YmJsZSdcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSW5pdCB0YWdpZnlcclxuICAgIGNvbnN0IGluaXRUYWdpZnkgPSAoKSA9PiB7XHJcbiAgICAgICAgLy8gRGVmaW5lIGFsbCBlbGVtZW50cyBmb3IgdGFnaWZ5XHJcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSBbXHJcbiAgICAgICAgICAgICcja3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X2NhdGVnb3J5JyxcclxuICAgICAgICAgICAgJyNrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3RfdGFncydcclxuICAgICAgICBdO1xyXG5cclxuICAgICAgICAvLyBMb29wIGFsbCBlbGVtZW50c1xyXG4gICAgICAgIGVsZW1lbnRzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIC8vIEdldCB0YWdpZnkgZWxlbWVudFxyXG4gICAgICAgICAgICBjb25zdCB0YWdpZnkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnQpO1xyXG5cclxuICAgICAgICAgICAgLy8gQnJlYWsgaWYgZWxlbWVudCBub3QgZm91bmRcclxuICAgICAgICAgICAgaWYgKCF0YWdpZnkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gSW5pdCB0YWdpZnkgLS0tIG1vcmUgaW5mbzogaHR0cHM6Ly95YWlyZW8uZ2l0aHViLmlvL3RhZ2lmeS9cclxuICAgICAgICAgICAgbmV3IFRhZ2lmeSh0YWdpZnksIHtcclxuICAgICAgICAgICAgICAgIHdoaXRlbGlzdDogW1wibmV3XCIsIFwidHJlbmRpbmdcIiwgXCJzYWxlXCIsIFwiZGlzY291bnRlZFwiLCBcInNlbGxpbmcgZmFzdFwiLCBcImxhc3QgMTBcIl0sXHJcbiAgICAgICAgICAgICAgICBkcm9wZG93bjoge1xyXG4gICAgICAgICAgICAgICAgICAgIG1heEl0ZW1zOiAyMCwgICAgICAgICAgIC8vIDwtIG1peHVtdW0gYWxsb3dlZCByZW5kZXJlZCBzdWdnZXN0aW9uc1xyXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzbmFtZTogXCJ0YWdpZnlfX2lubGluZV9fc3VnZ2VzdGlvbnNcIiwgLy8gPC0gY3VzdG9tIGNsYXNzbmFtZSBmb3IgdGhpcyBkcm9wZG93biwgc28gaXQgY291bGQgYmUgdGFyZ2V0ZWRcclxuICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiAwLCAgICAgICAgICAgICAvLyA8LSBzaG93IHN1Z2dlc3Rpb25zIG9uIGZvY3VzXHJcbiAgICAgICAgICAgICAgICAgICAgY2xvc2VPblNlbGVjdDogZmFsc2UgICAgLy8gPC0gZG8gbm90IGhpZGUgdGhlIHN1Z2dlc3Rpb25zIGRyb3Bkb3duIG9uY2UgYW4gaXRlbSBoYXMgYmVlbiBzZWxlY3RlZFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBJbml0IGZvcm0gcmVwZWF0ZXIgLS0tIG1vcmUgaW5mbzogaHR0cHM6Ly9naXRodWIuY29tL0R1YkZyaWVuZC9qcXVlcnkucmVwZWF0ZXJcclxuICAgIGNvbnN0IGluaXRGb3JtUmVwZWF0ZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgJCgnI2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9vcHRpb25zJykucmVwZWF0ZXIoe1xyXG4gICAgICAgICAgICBpbml0RW1wdHk6IGZhbHNlLFxyXG5cclxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlczoge1xyXG4gICAgICAgICAgICAgICAgJ3RleHQtaW5wdXQnOiAnZm9vJ1xyXG4gICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgc2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5zbGlkZURvd24oKTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBJbml0IHNlbGVjdDIgb24gbmV3IHJlcGVhdGVkIGl0ZW1zXHJcbiAgICAgICAgICAgICAgICBpbml0Q29uZGl0aW9uc1NlbGVjdDIoKTtcclxuICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgIGhpZGU6IGZ1bmN0aW9uIChkZWxldGVFbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnNsaWRlVXAoZGVsZXRlRWxlbWVudCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBJbml0IGNvbmRpdGlvbiBzZWxlY3QyXHJcbiAgICBjb25zdCBpbml0Q29uZGl0aW9uc1NlbGVjdDIgPSAoKSA9PiB7XHJcbiAgICAgICAgLy8gVG5pdCBuZXcgcmVwZWF0aW5nIGNvbmRpdGlvbiB0eXBlc1xyXG4gICAgICAgIGNvbnN0IGFsbENvbmRpdGlvblR5cGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEta3QtZWNvbW1lcmNlLWNhdGFsb2ctYWRkLXByb2R1Y3Q9XCJwcm9kdWN0X29wdGlvblwiXScpO1xyXG4gICAgICAgIGFsbENvbmRpdGlvblR5cGVzLmZvckVhY2godHlwZSA9PiB7XHJcbiAgICAgICAgICAgIGlmICgkKHR5cGUpLmhhc0NsYXNzKFwic2VsZWN0Mi1oaWRkZW4tYWNjZXNzaWJsZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCh0eXBlKS5zZWxlY3QyKHtcclxuICAgICAgICAgICAgICAgICAgICBtaW5pbXVtUmVzdWx0c0ZvclNlYXJjaDogLTFcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vIEluaXQgbm9VSXNsaWRlclxyXG4gICAgY29uc3QgaW5pdFNsaWRlciA9ICgpID0+IHtcclxuICAgICAgICB2YXIgc2xpZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3RfZGlzY291bnRfc2xpZGVyXCIpO1xyXG4gICAgICAgIHZhciB2YWx1ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIja3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X2Rpc2NvdW50X2xhYmVsXCIpO1xyXG5cclxuICAgICAgICBub1VpU2xpZGVyLmNyZWF0ZShzbGlkZXIsIHtcclxuICAgICAgICAgICAgc3RhcnQ6IFsxMF0sXHJcbiAgICAgICAgICAgIGNvbm5lY3Q6IHRydWUsXHJcbiAgICAgICAgICAgIHJhbmdlOiB7XHJcbiAgICAgICAgICAgICAgICBcIm1pblwiOiAxLFxyXG4gICAgICAgICAgICAgICAgXCJtYXhcIjogMTAwXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc2xpZGVyLm5vVWlTbGlkZXIub24oXCJ1cGRhdGVcIiwgZnVuY3Rpb24gKHZhbHVlcywgaGFuZGxlKSB7XHJcbiAgICAgICAgICAgIHZhbHVlLmlubmVySFRNTCA9IE1hdGgucm91bmQodmFsdWVzW2hhbmRsZV0pO1xyXG4gICAgICAgICAgICBpZiAoaGFuZGxlKSB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZS5pbm5lckhUTUwgPSBNYXRoLnJvdW5kKHZhbHVlc1toYW5kbGVdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEluaXQgRHJvcHpvbmVKUyAtLS0gbW9yZSBpbmZvOlxyXG4gICAgY29uc3QgaW5pdERyb3B6b25lID0gKCkgPT4ge1xyXG4gICAgICAgIHZhciBteURyb3B6b25lID0gbmV3IERyb3B6b25lKFwiI2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9tZWRpYVwiLCB7XHJcbiAgICAgICAgICAgIHVybDogXCJodHRwczovL2tlZW50aGVtZXMuY29tL3NjcmlwdHMvdm9pZC5waHBcIiwgLy8gU2V0IHRoZSB1cmwgZm9yIHlvdXIgdXBsb2FkIHNjcmlwdCBsb2NhdGlvblxyXG4gICAgICAgICAgICBwYXJhbU5hbWU6IFwiZmlsZVwiLCAvLyBUaGUgbmFtZSB0aGF0IHdpbGwgYmUgdXNlZCB0byB0cmFuc2ZlciB0aGUgZmlsZVxyXG4gICAgICAgICAgICBtYXhGaWxlczogMTAsXHJcbiAgICAgICAgICAgIG1heEZpbGVzaXplOiAxMCwgLy8gTUJcclxuICAgICAgICAgICAgYWRkUmVtb3ZlTGlua3M6IHRydWUsXHJcbiAgICAgICAgICAgIGFjY2VwdDogZnVuY3Rpb24gKGZpbGUsIGRvbmUpIHtcclxuICAgICAgICAgICAgICAgIGlmIChmaWxlLm5hbWUgPT0gXCJ3b3cuanBnXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBkb25lKFwiTmFoYSwgeW91IGRvbid0LlwiKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSGFuZGxlIGRpc2NvdW50IG9wdGlvbnNcclxuICAgIGNvbnN0IGhhbmRsZURpc2NvdW50ID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGRpc2NvdW50T3B0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W25hbWU9XCJkaXNjb3VudF9vcHRpb25cIl0nKTtcclxuICAgICAgICBjb25zdCBwZXJjZW50YWdlRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X2Rpc2NvdW50X3BlcmNlbnRhZ2UnKTtcclxuICAgICAgICBjb25zdCBmaXhlZEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9kaXNjb3VudF9maXhlZCcpO1xyXG5cclxuICAgICAgICBkaXNjb3VudE9wdGlvbnMuZm9yRWFjaChvcHRpb24gPT4ge1xyXG4gICAgICAgICAgICBvcHRpb24uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGUudGFyZ2V0LnZhbHVlO1xyXG5cclxuICAgICAgICAgICAgICAgIHN3aXRjaCAodmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICcyJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50YWdlRWwuY2xhc3NMaXN0LnJlbW92ZSgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpeGVkRWwuY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBjYXNlICczJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50YWdlRWwuY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpeGVkRWwuY2xhc3NMaXN0LnJlbW92ZSgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcmNlbnRhZ2VFbC5jbGFzc0xpc3QuYWRkKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZml4ZWRFbC5jbGFzc0xpc3QuYWRkKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBTaGlwcGluZyBvcHRpb24gaGFuZGxlclxyXG4gICAgY29uc3QgaGFuZGxlU2hpcHBpbmcgPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc3Qgc2hpcHBpbmdPcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X3NoaXBwaW5nX2NoZWNrYm94Jyk7XHJcbiAgICAgICAgY29uc3Qgc2hpcHBpbmdGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9zaGlwcGluZycpO1xyXG5cclxuICAgICAgICBzaGlwcGluZ09wdGlvbi5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBlID0+IHtcclxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBlLnRhcmdldC5jaGVja2VkO1xyXG5cclxuICAgICAgICAgICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICBzaGlwcGluZ0Zvcm0uY2xhc3NMaXN0LnJlbW92ZSgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBzaGlwcGluZ0Zvcm0uY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDYXRlZ29yeSBzdGF0dXMgaGFuZGxlclxyXG4gICAgY29uc3QgaGFuZGxlU3RhdHVzID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdrdF9lY29tbWVyY2VfYWRkX3Byb2R1Y3Rfc3RhdHVzJyk7XHJcbiAgICAgICAgY29uc3Qgc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2t0X2Vjb21tZXJjZV9hZGRfcHJvZHVjdF9zdGF0dXNfc2VsZWN0Jyk7XHJcbiAgICAgICAgY29uc3Qgc3RhdHVzQ2xhc3NlcyA9IFsnYmctc3VjY2VzcycsICdiZy13YXJuaW5nJywgJ2JnLWRhbmdlciddO1xyXG5cclxuICAgICAgICAkKHNlbGVjdCkub24oJ2NoYW5nZScsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7XHJcblxyXG4gICAgICAgICAgICBzd2l0Y2ggKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwicHVibGlzaGVkXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSguLi5zdGF0dXNDbGFzc2VzKTtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZCgnYmctc3VjY2VzcycpO1xyXG4gICAgICAgICAgICAgICAgICAgIGhpZGVEYXRlcGlja2VyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwic2NoZWR1bGVkXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSguLi5zdGF0dXNDbGFzc2VzKTtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZCgnYmctd2FybmluZycpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3dEYXRlcGlja2VyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiaW5hY3RpdmVcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKC4uLnN0YXR1c0NsYXNzZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QuYWRkKCdiZy1kYW5nZXInKTtcclxuICAgICAgICAgICAgICAgICAgICBoaWRlRGF0ZXBpY2tlcigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY2FzZSBcImRyYWZ0XCI6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSguLi5zdGF0dXNDbGFzc2VzKTtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZCgnYmctcHJpbWFyeScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGhpZGVEYXRlcGlja2VyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG5cclxuICAgICAgICAvLyBIYW5kbGUgZGF0ZXBpY2tlclxyXG4gICAgICAgIGNvbnN0IGRhdGVwaWNrZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X3N0YXR1c19kYXRlcGlja2VyJyk7XHJcblxyXG4gICAgICAgIC8vIEluaXQgZmxhdHBpY2tyIC0tLSBtb3JlIGluZm86IGh0dHBzOi8vZmxhdHBpY2tyLmpzLm9yZy9cclxuICAgICAgICAkKCcja3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X3N0YXR1c19kYXRlcGlja2VyJykuZmxhdHBpY2tyKHtcclxuICAgICAgICAgICAgZW5hYmxlVGltZTogdHJ1ZSxcclxuICAgICAgICAgICAgZGF0ZUZvcm1hdDogXCJZLW0tZCBIOmlcIixcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgY29uc3Qgc2hvd0RhdGVwaWNrZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGRhdGVwaWNrZXIucGFyZW50Tm9kZS5jbGFzc0xpc3QucmVtb3ZlKCdkLW5vbmUnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGhpZGVEYXRlcGlja2VyID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBkYXRlcGlja2VyLnBhcmVudE5vZGUuY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIENvbmRpdGlvbiB0eXBlIGhhbmRsZXJcclxuICAgIGNvbnN0IGhhbmRsZUNvbmRpdGlvbnMgPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgYWxsQ29uZGl0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tuYW1lPVwibWV0aG9kXCJdW3R5cGU9XCJyYWRpb1wiXScpO1xyXG4gICAgICAgIGNvbnN0IGNvbmRpdGlvbk1hdGNoID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWNvbW1lcmNlLWNhdGFsb2ctYWRkLWNhdGVnb3J5PVwiYXV0by1vcHRpb25zXCJdJyk7XHJcbiAgICAgICAgYWxsQ29uZGl0aW9ucy5mb3JFYWNoKHJhZGlvID0+IHtcclxuICAgICAgICAgICAgcmFkaW8uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZS50YXJnZXQudmFsdWUgPT09ICcxJykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbmRpdGlvbk1hdGNoLmNsYXNzTGlzdC5yZW1vdmUoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25kaXRpb25NYXRjaC5jbGFzc0xpc3QuYWRkKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBTdWJtaXQgZm9ybSBoYW5kbGVyXHJcbiAgICBjb25zdCBoYW5kbGVTdWJtaXQgPSAoKSA9PiB7XHJcbiAgICAgICAgLy8gRGVmaW5lIHZhcmlhYmxlc1xyXG4gICAgICAgIGxldCB2YWxpZGF0b3I7XHJcblxyXG4gICAgICAgIC8vIEdldCBlbGVtZW50c1xyXG4gICAgICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X2Zvcm0nKTtcclxuICAgICAgICBjb25zdCBzdWJtaXRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfZWNvbW1lcmNlX2FkZF9wcm9kdWN0X3N1Ym1pdCcpO1xyXG5cclxuICAgICAgICAvLyBJbml0IGZvcm0gdmFsaWRhdGlvbiBydWxlcy4gRm9yIG1vcmUgaW5mbyBjaGVjayB0aGUgRm9ybVZhbGlkYXRpb24gcGx1Z2luJ3Mgb2ZmaWNpYWwgZG9jdW1lbnRhdGlvbjpodHRwczovL2Zvcm12YWxpZGF0aW9uLmlvL1xyXG4gICAgICAgIHZhbGlkYXRvciA9IEZvcm1WYWxpZGF0aW9uLmZvcm1WYWxpZGF0aW9uKFxyXG4gICAgICAgICAgICBmb3JtLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBmaWVsZHM6IHtcclxuICAgICAgICAgICAgICAgICAgICAncHJvZHVjdF9uYW1lJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3JzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RFbXB0eToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdQcm9kdWN0IG5hbWUgaXMgcmVxdWlyZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICdza3UnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEVtcHR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1NLVSBpcyByZXF1aXJlZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgJ3NrdSc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90RW1wdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnUHJvZHVjdCBiYXJjb2RlIGlzIHJlcXVpcmVkJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAnc2hlbGYnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEVtcHR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1NoZWxmIHF1YW50aXR5IGlzIHJlcXVpcmVkJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAncHJpY2UnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEVtcHR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ1Byb2R1Y3QgYmFzZSBwcmljZSBpcyByZXF1aXJlZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgJ3RheCc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90RW1wdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnUHJvZHVjdCB0YXggY2xhc3MgaXMgcmVxdWlyZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcGx1Z2luczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXI6IG5ldyBGb3JtVmFsaWRhdGlvbi5wbHVnaW5zLlRyaWdnZXIoKSxcclxuICAgICAgICAgICAgICAgICAgICBib290c3RyYXA6IG5ldyBGb3JtVmFsaWRhdGlvbi5wbHVnaW5zLkJvb3RzdHJhcDUoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByb3dTZWxlY3RvcjogJy5mdi1yb3cnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVJbnZhbGlkQ2xhc3M6ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVWYWxpZENsYXNzOiAnJ1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICApO1xyXG5cclxuICAgICAgICAvLyBIYW5kbGUgc3VibWl0IGJ1dHRvblxyXG4gICAgICAgIHN1Ym1pdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgICAgICAvLyBWYWxpZGF0ZSBmb3JtIGJlZm9yZSBzdWJtaXRcclxuICAgICAgICAgICAgaWYgKHZhbGlkYXRvcikge1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdG9yLnZhbGlkYXRlKCkudGhlbihmdW5jdGlvbiAoc3RhdHVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3ZhbGlkYXRlZCEnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PSAnVmFsaWQnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2RhdGEta3QtaW5kaWNhdG9yJywgJ29uJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBEaXNhYmxlIHN1Ym1pdCBidXR0b24gd2hpbHN0IGxvYWRpbmdcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0QnV0dG9uLnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1rdC1pbmRpY2F0b3InKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTd2FsLmZpcmUoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IFwiRm9ybSBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgc3VibWl0dGVkIVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb246IFwic3VjY2Vzc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1dHRvbnNTdHlsaW5nOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogXCJPaywgZ290IGl0IVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUNsYXNzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b246IFwiYnRuIGJ0bi1wcmltYXJ5XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmlzQ29uZmlybWVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEVuYWJsZSBzdWJtaXQgYnV0dG9uIGFmdGVyIGxvYWRpbmdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBSZWRpcmVjdCB0byBjdXN0b21lcnMgbGlzdCBwYWdlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IGZvcm0uZ2V0QXR0cmlidXRlKFwiZGF0YS1rdC1yZWRpcmVjdFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgU3dhbC5maXJlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0bWw6IFwiU29ycnksIGxvb2tzIGxpa2UgdGhlcmUgYXJlIHNvbWUgZXJyb3JzIGRldGVjdGVkLCBwbGVhc2UgdHJ5IGFnYWluLiA8YnIvPjxici8+UGxlYXNlIG5vdGUgdGhhdCB0aGVyZSBtYXkgYmUgZXJyb3JzIGluIHRoZSA8c3Ryb25nPkdlbmVyYWw8L3N0cm9uZz4gb3IgPHN0cm9uZz5BZHZhbmNlZDwvc3Ryb25nPiB0YWJzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uOiBcImVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXR0b25zU3R5bGluZzogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogXCJPaywgZ290IGl0IVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tQ2xhc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uOiBcImJ0biBidG4tcHJpbWFyeVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBQdWJsaWMgbWV0aG9kc1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8vIEluaXQgZm9ybXNcclxuICAgICAgICAgICAgaW5pdFF1aWxsKCk7XHJcbiAgICAgICAgICAgIGluaXRUYWdpZnkoKTtcclxuICAgICAgICAgICAgaW5pdFNsaWRlcigpO1xyXG4gICAgICAgICAgICBpbml0Rm9ybVJlcGVhdGVyKCk7XHJcbiAgICAgICAgICAgIGluaXREcm9wem9uZSgpO1xyXG4gICAgICAgICAgICBpbml0Q29uZGl0aW9uc1NlbGVjdDIoKTtcclxuXHJcbiAgICAgICAgICAgIC8vIEhhbmRsZSBmb3Jtc1xyXG4gICAgICAgICAgICBoYW5kbGVTdGF0dXMoKTtcclxuICAgICAgICAgICAgaGFuZGxlQ29uZGl0aW9ucygpO1xyXG4gICAgICAgICAgICBoYW5kbGVEaXNjb3VudCgpO1xyXG4gICAgICAgICAgICBoYW5kbGVTaGlwcGluZygpO1xyXG4gICAgICAgICAgICBoYW5kbGVTdWJtaXQoKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59KCk7XHJcblxyXG4vLyBPbiBkb2N1bWVudCByZWFkeVxyXG5LVFV0aWwub25ET01Db250ZW50TG9hZGVkKGZ1bmN0aW9uICgpIHtcclxuICAgIEtUQXBwRWNvbW1lcmNlU2F2ZVByb2R1Y3QuaW5pdCgpO1xyXG59KTtcclxuIl0sIm5hbWVzIjpbIktUQXBwRWNvbW1lcmNlU2F2ZVByb2R1Y3QiLCJpbml0UXVpbGwiLCJlbGVtZW50cyIsImZvckVhY2giLCJlbGVtZW50IiwicXVpbGwiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJRdWlsbCIsIm1vZHVsZXMiLCJ0b29sYmFyIiwiaGVhZGVyIiwicGxhY2Vob2xkZXIiLCJ0aGVtZSIsImluaXRUYWdpZnkiLCJ0YWdpZnkiLCJUYWdpZnkiLCJ3aGl0ZWxpc3QiLCJkcm9wZG93biIsIm1heEl0ZW1zIiwiY2xhc3NuYW1lIiwiZW5hYmxlZCIsImNsb3NlT25TZWxlY3QiLCJpbml0Rm9ybVJlcGVhdGVyIiwiJCIsInJlcGVhdGVyIiwiaW5pdEVtcHR5IiwiZGVmYXVsdFZhbHVlcyIsInNob3ciLCJzbGlkZURvd24iLCJpbml0Q29uZGl0aW9uc1NlbGVjdDIiLCJoaWRlIiwiZGVsZXRlRWxlbWVudCIsInNsaWRlVXAiLCJhbGxDb25kaXRpb25UeXBlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0eXBlIiwiaGFzQ2xhc3MiLCJzZWxlY3QyIiwibWluaW11bVJlc3VsdHNGb3JTZWFyY2giLCJpbml0U2xpZGVyIiwic2xpZGVyIiwidmFsdWUiLCJub1VpU2xpZGVyIiwiY3JlYXRlIiwic3RhcnQiLCJjb25uZWN0IiwicmFuZ2UiLCJvbiIsInZhbHVlcyIsImhhbmRsZSIsImlubmVySFRNTCIsIk1hdGgiLCJyb3VuZCIsImluaXREcm9wem9uZSIsIm15RHJvcHpvbmUiLCJEcm9wem9uZSIsInVybCIsInBhcmFtTmFtZSIsIm1heEZpbGVzIiwibWF4RmlsZXNpemUiLCJhZGRSZW1vdmVMaW5rcyIsImFjY2VwdCIsImZpbGUiLCJkb25lIiwibmFtZSIsImhhbmRsZURpc2NvdW50IiwiZGlzY291bnRPcHRpb25zIiwicGVyY2VudGFnZUVsIiwiZ2V0RWxlbWVudEJ5SWQiLCJmaXhlZEVsIiwib3B0aW9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJoYW5kbGVTaGlwcGluZyIsInNoaXBwaW5nT3B0aW9uIiwic2hpcHBpbmdGb3JtIiwiY2hlY2tlZCIsImhhbmRsZVN0YXR1cyIsInNlbGVjdCIsInN0YXR1c0NsYXNzZXMiLCJoaWRlRGF0ZXBpY2tlciIsInNob3dEYXRlcGlja2VyIiwiZGF0ZXBpY2tlciIsImZsYXRwaWNrciIsImVuYWJsZVRpbWUiLCJkYXRlRm9ybWF0IiwicGFyZW50Tm9kZSIsImhhbmRsZUNvbmRpdGlvbnMiLCJhbGxDb25kaXRpb25zIiwiY29uZGl0aW9uTWF0Y2giLCJyYWRpbyIsImhhbmRsZVN1Ym1pdCIsInZhbGlkYXRvciIsImZvcm0iLCJzdWJtaXRCdXR0b24iLCJGb3JtVmFsaWRhdGlvbiIsImZvcm1WYWxpZGF0aW9uIiwiZmllbGRzIiwidmFsaWRhdG9ycyIsIm5vdEVtcHR5IiwibWVzc2FnZSIsInBsdWdpbnMiLCJ0cmlnZ2VyIiwiVHJpZ2dlciIsImJvb3RzdHJhcCIsIkJvb3RzdHJhcDUiLCJyb3dTZWxlY3RvciIsImVsZUludmFsaWRDbGFzcyIsImVsZVZhbGlkQ2xhc3MiLCJwcmV2ZW50RGVmYXVsdCIsInZhbGlkYXRlIiwidGhlbiIsInN0YXR1cyIsImNvbnNvbGUiLCJsb2ciLCJzZXRBdHRyaWJ1dGUiLCJkaXNhYmxlZCIsInNldFRpbWVvdXQiLCJyZW1vdmVBdHRyaWJ1dGUiLCJTd2FsIiwiZmlyZSIsInRleHQiLCJpY29uIiwiYnV0dG9uc1N0eWxpbmciLCJjb25maXJtQnV0dG9uVGV4dCIsImN1c3RvbUNsYXNzIiwiY29uZmlybUJ1dHRvbiIsInJlc3VsdCIsImlzQ29uZmlybWVkIiwid2luZG93IiwibG9jYXRpb24iLCJnZXRBdHRyaWJ1dGUiLCJodG1sIiwiaW5pdCIsIktUVXRpbCIsIm9uRE9NQ29udGVudExvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/backend/core/js/custom/apps/ecommerce/catalog/save-product.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/backend/core/js/custom/apps/ecommerce/catalog/save-product.js"]();
/******/ 	
/******/ })()
;