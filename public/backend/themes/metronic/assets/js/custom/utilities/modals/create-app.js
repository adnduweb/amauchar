/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/backend/core/js/custom/utilities/modals/create-app.js":
/*!*************************************************************************!*\
  !*** ./resources/backend/core/js/custom/utilities/modals/create-app.js ***!
  \*************************************************************************/
/***/ (() => {

eval(" // Class definition\n\nvar KTCreateApp = function () {\n  // Elements\n  var modal;\n  var modalEl;\n  var stepper;\n  var form;\n  var formSubmitButton;\n  var formContinueButton; // Variables\n\n  var stepperObj;\n  var validations = []; // Private Functions\n\n  var initStepper = function initStepper() {\n    // Initialize Stepper\n    stepperObj = new KTStepper(stepper); // Stepper change event(handle hiding submit button for the last step)\n\n    stepperObj.on('kt.stepper.changed', function (stepper) {\n      if (stepperObj.getCurrentStepIndex() === 4) {\n        formSubmitButton.classList.remove('d-none');\n        formSubmitButton.classList.add('d-inline-block');\n        formContinueButton.classList.add('d-none');\n      } else if (stepperObj.getCurrentStepIndex() === 5) {\n        formSubmitButton.classList.add('d-none');\n        formContinueButton.classList.add('d-none');\n      } else {\n        formSubmitButton.classList.remove('d-inline-block');\n        formSubmitButton.classList.remove('d-none');\n        formContinueButton.classList.remove('d-none');\n      }\n    }); // Validation before going to next page\n\n    stepperObj.on('kt.stepper.next', function (stepper) {\n      console.log('stepper.next'); // Validate form before change stepper step\n\n      var validator = validations[stepper.getCurrentStepIndex() - 1]; // get validator for currnt step\n\n      if (validator) {\n        validator.validate().then(function (status) {\n          console.log('validated!');\n\n          if (status == 'Valid') {\n            stepper.goNext(); //KTUtil.scrollTop();\n          } else {\n            // Show error message popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n            Swal.fire({\n              text: \"Sorry, looks like there are some errors detected, please try again.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn btn-light\"\n              }\n            }).then(function () {//KTUtil.scrollTop();\n            });\n          }\n        });\n      } else {\n        stepper.goNext();\n        KTUtil.scrollTop();\n      }\n    }); // Prev event\n\n    stepperObj.on('kt.stepper.previous', function (stepper) {\n      console.log('stepper.previous');\n      stepper.goPrevious();\n      KTUtil.scrollTop();\n    });\n    formSubmitButton.addEventListener('click', function (e) {\n      // Validate form before change stepper step\n      var validator = validations[3]; // get validator for last form\n\n      validator.validate().then(function (status) {\n        console.log('validated!');\n\n        if (status == 'Valid') {\n          // Prevent default button action\n          e.preventDefault(); // Disable button to avoid multiple click \n\n          formSubmitButton.disabled = true; // Show loading indication\n\n          formSubmitButton.setAttribute('data-kt-indicator', 'on'); // Simulate form submission\n\n          setTimeout(function () {\n            // Hide loading indication\n            formSubmitButton.removeAttribute('data-kt-indicator'); // Enable button\n\n            formSubmitButton.disabled = false;\n            stepperObj.goNext(); //KTUtil.scrollTop();\n          }, 2000);\n        } else {\n          Swal.fire({\n            text: \"Sorry, looks like there are some errors detected, please try again.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn btn-light\"\n            }\n          }).then(function () {\n            KTUtil.scrollTop();\n          });\n        }\n      });\n    });\n  }; // Init form inputs\n\n\n  var initForm = function initForm() {\n    // Expiry month. For more info, plase visit the official plugin site: https://select2.org/\n    $(form.querySelector('[name=\"card_expiry_month\"]')).on('change', function () {\n      // Revalidate the field when an option is chosen\n      validations[3].revalidateField('card_expiry_month');\n    }); // Expiry year. For more info, plase visit the official plugin site: https://select2.org/\n\n    $(form.querySelector('[name=\"card_expiry_year\"]')).on('change', function () {\n      // Revalidate the field when an option is chosen\n      validations[3].revalidateField('card_expiry_year');\n    });\n  };\n\n  var initValidation = function initValidation() {\n    // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n    // Step 1\n    validations.push(FormValidation.formValidation(form, {\n      fields: {\n        name: {\n          validators: {\n            notEmpty: {\n              message: 'App name is required'\n            }\n          }\n        },\n        category: {\n          validators: {\n            notEmpty: {\n              message: 'Category is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    })); // Step 2\n\n    validations.push(FormValidation.formValidation(form, {\n      fields: {\n        framework: {\n          validators: {\n            notEmpty: {\n              message: 'Framework is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        // Bootstrap Framework Integration\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    })); // Step 3\n\n    validations.push(FormValidation.formValidation(form, {\n      fields: {\n        dbname: {\n          validators: {\n            notEmpty: {\n              message: 'Database name is required'\n            }\n          }\n        },\n        dbengine: {\n          validators: {\n            notEmpty: {\n              message: 'Database engine is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        // Bootstrap Framework Integration\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    })); // Step 4\n\n    validations.push(FormValidation.formValidation(form, {\n      fields: {\n        'card_name': {\n          validators: {\n            notEmpty: {\n              message: 'Name on card is required'\n            }\n          }\n        },\n        'card_number': {\n          validators: {\n            notEmpty: {\n              message: 'Card member is required'\n            },\n            creditCard: {\n              message: 'Card number is not valid'\n            }\n          }\n        },\n        'card_expiry_month': {\n          validators: {\n            notEmpty: {\n              message: 'Month is required'\n            }\n          }\n        },\n        'card_expiry_year': {\n          validators: {\n            notEmpty: {\n              message: 'Year is required'\n            }\n          }\n        },\n        'card_cvv': {\n          validators: {\n            notEmpty: {\n              message: 'CVV is required'\n            },\n            digits: {\n              message: 'CVV must contain only digits'\n            },\n            stringLength: {\n              min: 3,\n              max: 4,\n              message: 'CVV must contain 3 to 4 digits only'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        // Bootstrap Framework Integration\n        bootstrap: new FormValidation.plugins.Bootstrap5({\n          rowSelector: '.fv-row',\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    }));\n  };\n\n  return {\n    // Public Functions\n    init: function init() {\n      // Elements\n      modalEl = document.querySelector('#kt_modal_create_app');\n\n      if (!modalEl) {\n        return;\n      }\n\n      modal = new bootstrap.Modal(modalEl);\n      stepper = document.querySelector('#kt_modal_create_app_stepper');\n      form = document.querySelector('#kt_modal_create_app_form');\n      formSubmitButton = stepper.querySelector('[data-kt-stepper-action=\"submit\"]');\n      formContinueButton = stepper.querySelector('[data-kt-stepper-action=\"next\"]');\n      initStepper();\n      initForm();\n      initValidation();\n    }\n  };\n}(); // On document ready\n\n\nKTUtil.onDOMContentLoaded(function () {\n  KTCreateApp.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/backend/core/js/custom/utilities/modals/create-app.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/backend/core/js/custom/utilities/modals/create-app.js"]();
/******/ 	
/******/ })()
;